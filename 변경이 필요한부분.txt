cpp 서버와 python 서버간 
근무표 생성 요청 이후 
다시 요청이 왔을때 파이썬 서버에서 요청이 끝났는지 안끝났는지 무한정 대기상태였다가
내가 cmd 터미널에서 엔터를 치면 그제서야 완성된것처럼 근무표 생성완료 메시지가 나온다
cpp 서버에서는 최대 5초를 기다렸다가 그냥 바로 요청을 끊는다.
그래서 엔터를 기다리는것처럼 보이는 문제를 
파이썬 코드 내에서

def recv_exact(conn: socket.socket, n: int) -> bytes:
    conn.settimeout(5.0)  # 5초 타임아웃
    buf = b''
    try:
        while len(buf) < n:
            chunk = conn.recv(n - len(buf))
            if not chunk:
                raise ConnectionError(f"Socket connection closed unexpectedly from {conn.getpeername()}")
            buf += chunk
    except socket.timeout:
        logger.warning(f"[BINARY] Timeout receiving {n} bytes from {conn.getpeername()}")
        raise
    return buf

    이런식으로 conn.settimeout(5.0) 타임아웃을 줘서 회피하려한다.
    cpp 서버도 마찬가지로 
    
    SOCKET sock = socket(p->ai_family, p->ai_socktype, p->ai_protocol);
    if (sock == INVALID_SOCKET) continue;
    DWORD timeout = 5000; // 5000ms 타임아웃
    setsockopt(sock, SOL_SOCKET, SO_RCVTIMEO, (const char*)&timeout, sizeof(timeout));
    setsockopt(sock, SOL_SOCKET, SO_SNDTIMEO, (const char*)&timeout, sizeof(timeout));

    이런방식으로 통일시켜서 회피시도중이다.
    다른 해결방법이 있을까? 파이썬 서버측에서 어떻게 이런문제를 해결/ 회피할수 있을까? 


shifter 프로젝트 변경점 기록
=====================================
날짜: 2025년 8월 1일

주요 변경사항: main.cpp 파일에 자연어 근무교대 요청 처리 기능 통합
===================================================================

1. 헤더 파일 추가
------------------
- #include <regex> 추가: 정규표현식 처리를 위함
- #include <cstdlib> 추가: system() 함수 사용을 위함
- #include <cstdio> 추가: sscanf() 함수 사용을 위함

2. 새로운 구조체 추가
--------------------
- ParsedData 구조체 추가:
  * name: 직원 이름
  * date: 근무 날짜
  * fromShift: 기존 근무 시간대
  * toShift: 변경할 근무 시간대

3. 새로운 함수 추가
------------------
가. parseNaturalLanguage() 함수
- 자연어 입력을 파싱하여 구조화된 데이터로 변환
- 정규표현식을 사용하여 "이름 날짜 X근무에서 Y근무로 변경을 희망합니다." 형태의 입력 처리

나. updateAndExecuteShiftScheduler() 함수
- 초기 버전: 자연어 입력을 받아서 처리
- 최종 버전: 4개의 개별 매개변수를 받아서 처리 (staff_id, date_, shift_from, shift_to)
- 주요 기능:
  * Python 파일(shift_scheduler.py) 읽기
  * 날짜 유효성 검사 (2025년 8월 범위)
  * Python 코드에 제약조건 삽입
  * 백업 파일 생성 후 수정된 내용 저장
  * Python 스크립트 실행
  * 결과에 따른 적절한 메시지 반환

4. 새로운 프로토콜 추가
----------------------
가. GetSchedule 프로토콜
- 기능: time_table.json 파일의 내용을 클라이언트에 전송
- 응답: schedule_data 프로토콜로 JSON 내용 반환
- 에러 처리: 파일을 찾을 수 없는 경우 적절한 에러 메시지

나. ChangeShift 프로토콜
- 기능: 근무교대 요청 처리
- 입력 필드:
  * staff_id: 직원 ID
  * date_: 근무 날짜 (YYYY-MM-DD 형식)
  * shift_from: 기존 근무 시간대
  * shift_to: 변경할 근무 시간대
- 응답 타입:
  * change_success: 변경 성공
  * no_solution: 해가 없음
  * change_error: 처리 중 오류 발생
- 성공 시 generate_and_insert_schedule() 함수 호출하여 DB 업데이트

5. 오류 처리 강화
----------------
- 파일 읽기/쓰기 오류 처리
- 날짜 유효성 검사
- Python 스크립트 실행 오류 처리
- 필수 JSON 필드 누락 검사
- "해가 없습니다" 메시지 특별 처리

6. 주요 워크플로우
-----------------
1) C# 클라이언트 → ChangeShift 프로토콜로 요청
2) 서버에서 4개 필드 추출 (staff_id, date_, shift_from, shift_to)
3) shift_scheduler.py 파일을 읽어서 제약조건 추가
4) 수정된 Python 파일 실행
5) 실행 결과에 따라 적절한 응답 반환
6) 성공 시 새로운 스케줄을 데이터베이스에 저장

7. 기존 기능 유지
----------------
- Hello 프로토콜: 연결 확인
- Insert 프로토콜: 테스트 데이터 삽입
- 기존 데이터베이스 연결 및 스케줄 저장 기능

8. 개선사항
-----------
- 자연어 처리에서 구조화된 JSON 데이터 처리로 변경
- 더 정확하고 안정적인 데이터 처리
- 명확한 에러 메시지 제공
- 백업 파일 생성으로 안전성 향상

이번 변경으로 C# 클라이언트에서 근무교대 요청을 JSON 형태로 보내면 
서버가 이를 처리하여 Python 스크립트를 수정/실행하고 결과를 
적절히 응답하는 완전한 시스템이 구축되었습니다.